name: üéâ Fucking Custom ROM Builder üöÄ

on:
  workflow_dispatch:
    inputs:
      rom_manifest:
        description: 'ROM Manifest Git URL'
        required: true
        default: 'https://github.com/LineageOS/android.git'
      rom_branch:
        description: 'ROM Branch'
        required: true
        default: 'lineage-21.0'
      device_manifest:
        description: 'Device trees manifest Git URL (optional)'
        required: false
        default: ''
      device_branch:
        description: 'Device trees branch (optional)'
        required: false
        default: 'main'
      device_codename:
        description: 'Device codename'
        required: true
        default: 'daisy'
      lunch_target:
        description: 'Lunch target (leave empty for default)'
        required: false
        default: ''
      build_variant:
        description: 'Build variant (user/userdebug/eng)'
        required: false
        default: 'userdebug'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 1440

    env:
      CCACHE_DIR: "/mnt/ccache"
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      SOURCEFORGE_USER: ${{ secrets.SOURCEFORGE_USER }}
      SOURCEFORGE_PASS: ${{ secrets.SOURCEFORGE_PASS }}
      GDRIVE_REMOTE: ${{ secrets.GDRIVE_REMOTE }}
      GDRIVE_TOKEN: ${{ secrets.GDRIVE_TOKEN }}

    steps:
    - name: üî• Start Build - Banner
      run: |
        echo -e "\e[1;96m==========================================\e[0m"
        echo -e "\e[1;92müöÄ Starting Custom ROM Build for ${{ github.event.inputs.device_codename }} üöÄ\e[0m"
        echo -e "\e[1;96m==========================================\e[0m"

    - name: üì• Checkout repo
      uses: actions/checkout@v4

    - name: ‚öôÔ∏è Install dependencies
      run: |
        echo -e "\e[1;93m‚è≥ Installing dependencies...\e[0m"
        sudo apt update
        sudo apt install -y git-core gnupg flex bison build-essential zip curl zlib1g-dev \
          gcc-multilib g++-multilib libc6-dev-i386 libncurses5 libncurses5-dev \
          x11proto-core-dev libx11-dev lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc \
          unzip fontconfig openjdk-17-jdk python-is-python3 python3 python3-pip ccache repo

    - name: üóÇ Setup ccache
      run: |
        echo -e "\e[1;94m‚ö° Setting up ccache...\e[0m"
        mkdir -p $CCACHE_DIR
        export USE_CCACHE=1
        export CCACHE_EXEC=$(which ccache)
        ccache -M 50G
        echo "CCACHE_DIR=$CCACHE_DIR" >> $GITHUB_ENV
        echo "USE_CCACHE=1" >> $GITHUB_ENV

    - name: üì¶ Initialize ROM repo
      run: |
        mkdir -p ~/rom && cd ~/rom
        echo -e "\e[1;95müì° Initializing ROM manifest\e[0m"
        echo -e "\e[1;95müîó URL: ${{ github.event.inputs.rom_manifest }} Branch: ${{ github.event.inputs.rom_branch }}\e[0m"
        repo init -u "${{ github.event.inputs.rom_manifest }}" -b "${{ github.event.inputs.rom_branch }}" --depth=1 || exit 1

    - name: üîÑ Sync ROM source
      run: |
        cd ~/rom
        echo -e "\e[1;95müîÑ Syncing ROM source...\e[0m"
        repo sync -c --no-tags --no-clone-bundle --optimized-fetch --prune -j$(nproc) || exit 1

    - name: üå≤ Clone device trees (optional)
      if: ${{ github.event.inputs.device_manifest != '' }}
      run: |
        cd ~/rom
        echo -e "\e[1;96müå≥ Cloning device/vendor/kernel trees from device manifest\e[0m"
        echo -e "\e[1;96müåê URL: ${{ github.event.inputs.device_manifest }} Branch: ${{ github.event.inputs.device_branch }}\e[0m"
        rm -rf device/xiaomi/${{ github.event.inputs.device_codename }} vendor/xiaomi/${{ github.event.inputs.device_codename }} kernel/xiaomi/${{ github.event.inputs.device_codename }}
        git clone --depth=1 -b "${{ github.event.inputs.device_branch }}" "${{ github.event.inputs.device_manifest }}/device/xiaomi/${{ github.event.inputs.device_codename }}.git" device/xiaomi/${{ github.event.inputs.device_codename }}
        git clone --depth=1 -b "${{ github.event.inputs.device_branch }}" "${{ github.event.inputs.device_manifest }}/vendor/xiaomi/${{ github.event.inputs.device_codename }}.git" vendor/xiaomi/${{ github.event.inputs.device_codename }}
        git clone --depth=1 -b "${{ github.event.inputs.device_branch }}" "${{ github.event.inputs.device_manifest }}/kernel/xiaomi/${{ github.event.inputs.device_codename }}.git" kernel/xiaomi/${{ github.event.inputs.device_codename }}

    - name: ‚öôÔ∏è Setup build environment & lunch
      run: |
        cd ~/rom
        source build/envsetup.sh
        LUNCH_TARGET="${{ github.event.inputs.lunch_target }}"
        if [ -z "$LUNCH_TARGET" ]; then
          LUNCH_TARGET="lineage_${{ github.event.inputs.device_codename }}-${{ github.event.inputs.build_variant }}"
        fi
        echo -e "\e[1;92müç± Lunch target: $LUNCH_TARGET\e[0m"
        lunch $LUNCH_TARGET

    - name: üõ† Start build
      run: |
        cd ~/rom
        echo -e "\e[1;93m‚öôÔ∏è Building ROM (make bacon)...\e[0m"
        make bacon -j$(nproc)

    - name: üì§ Upload build artifact to GitHub
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ github.event.inputs.device_codename }}
        path: ~/rom/out/target/product/${{ github.event.inputs.device_codename }}/*.zip

    - name: üåê Upload to SourceForge
      if: success() && env.SOURCEFORGE_USER != '' && env.SOURCEFORGE_PASS != ''
      run: |
        echo -e "\e[1;94m‚¨ÜÔ∏è Uploading ROM to SourceForge...\e[0m"
        sudo apt install -y lftp
        FILE=$(ls ~/rom/out/target/product/${{ github.event.inputs.device_codename }}/*.zip | head -n 1)
        lftp -u $SOURCEFORGE_USER,$SOURCEFORGE_PASS -e "set ssl:verify-certificate no; cd /home/project-web/yourproject/roms/${{ github.event.inputs.device_codename }}; put $FILE; bye"

    - name: ‚òÅÔ∏è Upload to Google Drive via rclone
      if: success() && env.GDRIVE_REMOTE != '' && env.GDRIVE_TOKEN != ''
      env:
        RCLONE_CONFIG_GDRIVE_TOKEN: ${{ secrets.GDRIVE_TOKEN }}
      run: |
        echo -e "\e[1;94m‚¨ÜÔ∏è Uploading ROM to Google Drive...\e[0m"
        curl -O https://downloads.rclone.org/rclone-current-linux-amd64.zip
        unzip rclone-current-linux-amd64.zip
        sudo cp rclone-*-linux-amd64/rclone /usr/bin/
        sudo chown root:root /usr/bin/rclone
        sudo chmod 755 /usr/bin/rclone
        mkdir -p ~/.config/rclone
        echo "[${GDRIVE_REMOTE}]" > ~/.config/rclone/rclone.conf
        echo "type = drive" >> ~/.config/rclone/rclone.conf
        echo "token = $RCLONE_CONFIG_GDRIVE_TOKEN" >> ~/.config/rclone/rclone.conf
        FILE=$(ls ~/rom/out/target/product/${{ github.event.inputs.device_codename }}/*.zip | head -n 1)
        rclone copy $FILE ${GDRIVE_REMOTE}:/$DEVICE_CODENAME/ -v

    - name: üì≤ Telegram notify on success
      if: success() && env.TELEGRAM_TOKEN != '' && env.TELEGRAM_CHAT_ID != ''
      run: |
        curl -s -X POST https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage \
          -d chat_id=${TELEGRAM_CHAT_ID} \
          -d text="‚úÖ *Custom ROM* build for *${{ github.event.inputs.device_codename }}* completed successfully! üéâ" \
          -d parse_mode=Markdown

    - name: ‚ùå Telegram notify on failure
      if: failure() && env.TELEGRAM_TOKEN != '' && env.TELEGRAM_CHAT_ID != ''
      run: |
        curl -s -X POST https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage \
          -d chat_id=${TELEGRAM_CHAT_ID} \
          -d text="‚ùå *Custom ROM* build for *${{ github.event.inputs.device_codename }}* failed. Please check logs. ‚ö†Ô∏è" \
          -d parse_mode=Markdown

    - name: üéâ Build complete banner
      if: success()
      run: |
        echo -e "\e[1;92m==========================================\e[0m"
        echo -e "\e[1;92m‚úÖ Build completed successfully! ‚úÖ\e[0m"
        echo -e "\e[1;92m==========================================\e[0m"

    - name: ‚ö†Ô∏è Build failed banner
      if: failure()
      run: |
        echo -e "\e[1;91m==========================================\e[0m"
        echo -e "\e[1;91m‚ùå Build failed! Please review the logs ‚ùå\e[0m"
        echo -e "\e[1;91m==========================================\e[0m"
